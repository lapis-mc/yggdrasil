group 'com.lapismc.minecraft'
version '0.5.1'

buildscript {
    ext {
        kotlin_version  = '1.1.3-2'
        fuel_version    = '1.9.0'
        kotson_version  = '2.5.0'
        dokka_version   = '0.9.15'
        bintray_version = '1.7.3'
    }

    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintray_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "com.github.kittinunf.fuel:fuel:$fuel_version"
    compile "com.github.kittinunf.fuel:fuel-gson:$fuel_version"
    compile "com.github.salomonbrys.kotson:kotson:$kotson_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

publishing {
    publications {
        MinecraftVersioning(MavenPublication) {
            from components.java
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser')   ? project.property('bintrayUser')   : System.getenv('BINTRAY_USER')
    key  = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    publications = ['MinecraftVersioning']
    pkg {
        userOrg    = 'lapis-mc'
        repo       = 'minecraft'
        name       = 'yggdrasil'
        githubRepo = 'lapis-mc/yggdrasil'
        vcsUrl     = 'https://github.com/lapis-mc/yggdrasil.git'
        licenses   = ['MIT']
        publish    = true
    }
}

publishing.publications.all {
    pom.withXml {
        asNode().dependencies.'*'.findAll() {
            it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->
                dep.name == it.artifactId.text()
            }
        }.each { it.scope*.value = 'compile'}
    }
}
